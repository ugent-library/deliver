// Code generated by ent, DO NOT EDIT.

package file

const (
	// Label holds the string label denoting the file type in the database.
	Label = "file"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// EdgeFolder holds the string denoting the folder edge name in mutations.
	EdgeFolder = "folder"
	// Table holds the table name of the file in the database.
	Table = "files"
	// FolderTable is the table that holds the folder relation/edge.
	FolderTable = "files"
	// FolderInverseTable is the table name for the Folder entity.
	// It exists in this package in order to avoid circular dependency with the "folder" package.
	FolderInverseTable = "folders"
	// FolderColumn is the table column denoting the folder relation/edge.
	FolderColumn = "folder_files"
)

// Columns holds all SQL columns for file fields.
var Columns = []string{
	FieldID,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "files"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"folder_files",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() string
)
