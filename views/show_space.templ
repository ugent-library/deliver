package views

import (
	"github.com/ugent-library/deliver/ctx"
	"github.com/ugent-library/deliver/models"
	"github.com/ugent-library/okay"
)

templ ShowSpace(c *ctx.Ctx, space *models.Space, folders []*models.Folder, q string, userSpaces []*models.Space, folder *models.Folder, errs *okay.Errors) {
	@pageLayout(c, space.Name) {
		<div
			class="c-sub-sidebar c-sidebar--bordered"
			hx-ext="ws"
			ws-connect={ c.WebSocketPath("space." + space.ID) }
		>
			<div class="bc-navbar bc-navbar--xlarge bc-navbar--bordered-bottom">
				<div class="bc-toolbar">
					<div class="bc-toolbar-left">
						<div class="bc-toolbar-item">
							<h1 class="bc-toolbar-title">Your deliver spaces</h1>
						</div>
					</div>
				</div>
			</div>
			<div class="c-sub-sidebar__menu my-6">
				<nav>
					<ul class="c-sub-sidebar-menu">
						for _, s := range userSpaces {
							<li class={ "c-sub-sidebar__item", templ.KV("c-sub-sidebar__item--active", s.ID == space.ID) }>
								<a href={ templ.URL(c.PathTo("space", "spaceName", s.Name).String()) }>
									<span class="c-sidebar__label">{ s.Name }</span>
								</a>
							</li>
						}
						if c.Permissions.IsAdmin(c.User) {
							<li class="c-sub-sidebar__item">
								<a href={ templ.URL(c.PathTo("newSpace").String()) }>
									<span class="c-sidebar__label">
										<i class="if if-add"></i>
										Make a new space
									</span>
								</a>
							</li>
						}
					</ul>
				</nav>
			</div>
		</div>
		<div class="w-100 u-scroll-wrapper">
			<div class="bg-white">
				<div class="bc-navbar bc-navbar--xlarge bc-navbar--white bc-navbar--bordered-bottom">
					<div class="bc-toolbar">
						<div class="bc-toolbar-left">
							<div class="bc-toolbar-item">
								<h1 class="bc-toolbar-title">{ space.Name } folders</h1>
							</div>
						</div>
						if c.Permissions.IsAdmin(c.User) {
							<div class="bc-toolbar-right">
								<div class="bc-toolbar-item">
									<a class="btn btn-link btn-link-muted" href={ templ.URL(c.PathTo("editSpace", "spaceName", space.Name).String()) }>
										<i class="if if-edit"></i>
										<span class="btn-text">Edit space</span>
									</a>
								</div>
							</div>
						}
					</div>
				</div>
			</div>
			<div class="u-scroll-wrapper__body p-6">
				<div class="card w-100 mb-6">
					<div class="card-header">
						<div class="bc-toolbar">
							<div class="bc-toolbar-left">
								<div class="bc-toolbar-item">
									<h2>Make a folder</h2>
								</div>
							</div>
						</div>
					</div>
					<div class="card-body">
						<form action={ templ.URL(c.PathTo("createFolder", "spaceName", space.Name).String()) } method="POST">
							@csrfField(c)
							<div class={ "mb-6", templ.KV("is-invalid", errs.Get("name") != nil) }>
								<label class="c-label" for="folder-name">Folder name</label>
								<div class="row">
									<div class="col-md-6">
										if e := errs.Get("name"); e != nil {
											<input class="form-control is-invalid" type="text" value={ folder.Name } id="folder-name" name="name" aria-invalid="true" aria-describedby="folder-name-invalid"/>
											<small class="invalid-feedback" id="folder-name-invalid">{ e.Error() }</small>
										} else {
											<input class="form-control" type="text" value={ folder.Name } id="folder-name" name="name"/>
										}
										<small class="form-text text-muted">
											We will generate a shareable public link for you.
											<br/>
											Each folder will expire one month after creation date.
										</small>
									</div>
									<div class="col-md-3">
										<button class="btn btn-primary ms-4" type="submit">
											<i class="if if-check"></i>
											<span class="btn-text">Make folder</span>
										</button>
									</div>
								</div>
							</div>
						</form>
					</div>
				</div>
				<form action={ templ.URL(c.PathTo("space", "spaceName", space.Name).String()) }>
					<div class="form mb-6 mt-8">
						<div class="row">
							<div class="col">
								<div class="input-group">
									<input
										class="form-control"
										type="search"
										id="q"
										name="q"
										value={ q }
										autocomplete="off"
										hx-get={ c.PathTo("getFolders", "spaceName", space.Name).String() }
										hx-trigger="input changed delay:500ms, search"
										hx-target="#folders"
										hx-swap="innerHTML"
									/>
									<label class="visually-hidden" for="q">Search</label>
									<button class="btn btn-outline-primary" type="submit">
										<i class="if if-search"></i>
										<div class="btn-text">Search</div>
									</button>
								</div>
							</div>
						</div>
					</div>
				</form>
				<div id="folders">
					@Folders(c, folders, len(space.Folders))
				</div>
			</div>
		</div>
	}
}
