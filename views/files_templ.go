// Code generated by templ@v0.2.364 DO NOT EDIT.

package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"fmt"
	"github.com/ugent-library/deliver/ctx"
	"github.com/ugent-library/deliver/models"
	"github.com/ugent-library/friendly"
)

func Files(c *ctx.Ctx, files []*models.File) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<div class=\"card w-100 mb-6\" id=\"files\"><div class=\"card-header\"><div class=\"bc-toolbar\"><div class=\"bc-toolbar-left\"><div class=\"bc-toolbar-item\"><h5>")
		if err != nil {
			return err
		}
		var_2 := `Available files`
		_, err = templBuffer.WriteString(var_2)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h5></div></div><div class=\"bc-toolbar-right\"><div class=\"bc-toolbar-item\"><p id=\"folder-number-of-files\">")
		if err != nil {
			return err
		}
		var var_3 string = fmt.Sprint(len(files))
		_, err = templBuffer.WriteString(templ.EscapeString(var_3))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" ")
		if err != nil {
			return err
		}
		var_4 := `items`
		_, err = templBuffer.WriteString(var_4)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</p></div></div></div></div>")
		if err != nil {
			return err
		}
		if len(files) > 0 {
			_, err = templBuffer.WriteString("<div class=\"table-responsive\"><table class=\"table table-sm table-bordered\"><thead><tr><th class=\"table-col-lg-fixed table-col-sm-fixed-left text-nowrap\">")
			if err != nil {
				return err
			}
			var_5 := `File name`
			_, err = templBuffer.WriteString(var_5)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th class=\"text-nowrap\">")
			if err != nil {
				return err
			}
			var_6 := `Size`
			_, err = templBuffer.WriteString(var_6)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th class=\"text-nowrap\">")
			if err != nil {
				return err
			}
			var_7 := `Type`
			_, err = templBuffer.WriteString(var_7)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th class=\"text-nowrap\">")
			if err != nil {
				return err
			}
			var_8 := `Downloads`
			_, err = templBuffer.WriteString(var_8)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th class=\"text-nowrap\">")
			if err != nil {
				return err
			}
			var_9 := `Created at`
			_, err = templBuffer.WriteString(var_9)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th class=\"table-col-sm-fixed table-col-sm-fixed-right\"></th></tr></thead><tbody>")
			if err != nil {
				return err
			}
			for _, f := range files {
				_, err = templBuffer.WriteString("<tr class=\"clickable-table-row\"><td class=\"text-nowrap table-col-lg-fixed table-col-sm-fixed-left\"><a href=\"")
				if err != nil {
					return err
				}
				var var_10 templ.SafeURL = templ.URL(c.PathTo("downloadFile", "fileID", f.ID).String())
				_, err = templBuffer.WriteString(templ.EscapeString(string(var_10)))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\"><i class=\"if if-download\"></i><span>")
				if err != nil {
					return err
				}
				var var_11 string = f.Name
				_, err = templBuffer.WriteString(templ.EscapeString(var_11))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span></a><br><small class=\"text-muted\">")
				if err != nil {
					return err
				}
				var_12 := `md5 checksum: `
				_, err = templBuffer.WriteString(var_12)
				if err != nil {
					return err
				}
				var var_13 string = f.MD5
				_, err = templBuffer.WriteString(templ.EscapeString(var_13))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</small></td><td class=\"text-nowrap\"><p>")
				if err != nil {
					return err
				}
				var var_14 string = friendly.Bytes(f.Size)
				_, err = templBuffer.WriteString(templ.EscapeString(var_14))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</p></td><td class=\"text-nowrap\"><p>")
				if err != nil {
					return err
				}
				var var_15 string = f.ContentType
				_, err = templBuffer.WriteString(templ.EscapeString(var_15))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</p></td><td class=\"text-nowrap\"><p id=\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(templ.EscapeString(fmt.Sprintf("file-%s-downloads", f.ID)))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\">")
				if err != nil {
					return err
				}
				var var_16 string = fmt.Sprint(f.Downloads)
				_, err = templBuffer.WriteString(templ.EscapeString(var_16))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</p></td><td class=\"text-nowrap\"><p>")
				if err != nil {
					return err
				}
				var var_17 string = f.CreatedAt.In(c.Timezone).Format("2006-01-02 15:04")
				_, err = templBuffer.WriteString(templ.EscapeString(var_17))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</p></td><td class=\"table-col-sm-fixed table-col-sm-fixed-right\"><div class=\"c-button-toolbar flex-nowrap\"><button class=\"btn btn-link\" hx-delete=\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(templ.EscapeString(c.PathTo("deleteFile", "fileID", f.ID).String()))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\" data-confirm=\"true\" data-confirm-header=\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(templ.EscapeString(fmt.Sprintf("Are you sure you want to delete the file<br><strong>%s</strong>?", f.Name)))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\" data-confirm-proceed=\"Yes, delete this file\"><i class=\"if if-delete\"></i><span class=\"btn-text\">")
				if err != nil {
					return err
				}
				var_18 := `Delete`
				_, err = templBuffer.WriteString(var_18)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span></button><a class=\"btn btn-link\" href=\"")
				if err != nil {
					return err
				}
				var var_19 templ.SafeURL = templ.URL(c.PathTo("downloadFile", "fileID", f.ID).String())
				_, err = templBuffer.WriteString(templ.EscapeString(string(var_19)))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\"><i class=\"if if-download\"></i><span class=\"btn-text\">")
				if err != nil {
					return err
				}
				var_20 := `Download`
				_, err = templBuffer.WriteString(var_20)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span></a></div></td></tr>")
				if err != nil {
					return err
				}
			}
			_, err = templBuffer.WriteString("</tbody></table></div>")
			if err != nil {
				return err
			}
		} else {
			_, err = templBuffer.WriteString("<div class=\"c-blank-slate c-blank-slate-muted\"><div class=\"bc-avatar\"><i class=\"if if-info-circle\"></i></div><p>")
			if err != nil {
				return err
			}
			var_21 := `Upload files to get started`
			_, err = templBuffer.WriteString(var_21)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</p></div>")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("</div>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
