// Code generated by templ@v0.2.364 DO NOT EDIT.

package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import "github.com/ugent-library/deliver/ctx"

func Home(c *ctx.Ctx) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		var_2 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
			templBuffer, templIsBuffer := w.(*bytes.Buffer)
			if !templIsBuffer {
				templBuffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templBuffer)
			}
			_, err = templBuffer.WriteString("<div class=\"w-100 u-scroll-wrapper\"><div class=\"u-scroll-wrapper__body p-8\"><div class=\"bc-toolbar bc-toolbar--auto align-items-start\"><div class=\"bc-toolbar-left\"><div class=\"bc-toolbar-item\"><h1>")
			if err != nil {
				return err
			}
			var_3 := `Deliver`
			_, err = templBuffer.WriteString(var_3)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</h1><p class=\"c-intro\">")
			if err != nil {
				return err
			}
			var_4 := `Supporting library services for UGent Librarians.`
			_, err = templBuffer.WriteString(var_4)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</p></div></div><div class=\"bc-toolbar-right\"><div class=\"bc-toolbar-item\"><a class=\"btn btn-primary\" href=\"")
			if err != nil {
				return err
			}
			var var_5 templ.SafeURL = templ.URL(c.PathTo("login").String())
			_, err = templBuffer.WriteString(templ.EscapeString(string(var_5)))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\"><i class=\"if if-arrow-right mt-0 ms-2\"></i><span class=\"btn-text me-2\">")
			if err != nil {
				return err
			}
			var_6 := `Log in`
			_, err = templBuffer.WriteString(var_6)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</span></a></div></div></div><div class=\"row mt-8\"><div class=\"col-12 col-lg-6 mb-6\"><div class=\"card h-100\"><div class=\"card-body\"><div class=\"bc-avatar-and-text mb-6\"><div class=\"bc-avatar bc-avatar--medium bc-avatar--rounded bc-avatar--light-blue\"><i class=\"if if-copy\"></i></div><div class=\"bc-avatar-text\"><h3>")
			if err != nil {
				return err
			}
			var_7 := `Share folders`
			_, err = templBuffer.WriteString(var_7)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</h3></div></div><p class=\"text-muted\">")
			if err != nil {
				return err
			}
			var_8 := `Create temporary folders to`
			_, err = templBuffer.WriteString(var_8)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(" ")
			if err != nil {
				return err
			}
			var_9 := `share library specific documents with the library`
			_, err = templBuffer.WriteString(var_9)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(" ")
			if err != nil {
				return err
			}
			var_10 := `public.`
			_, err = templBuffer.WriteString(var_10)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</p></div></div></div><div class=\"col-12 col-lg-6 mb-6\"><div class=\"card h-100\"><div class=\"card-body\"><div class=\"bc-avatar-and-text mb-6\"><div class=\"bc-avatar bc-avatar--medium bc-avatar--rounded bc-avatar--light-blue\"><i class=\"if if-file\"></i></div><div class=\"bc-avatar-text\"><h3>")
			if err != nil {
				return err
			}
			var_11 := `Upload &amp; monitor documents`
			_, err = templBuffer.WriteString(var_11)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</h3></div></div><p class=\"text-muted\">")
			if err != nil {
				return err
			}
			var_12 := `Upload any type of document, up to`
			_, err = templBuffer.WriteString(var_12)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(" ")
			if err != nil {
				return err
			}
			var_13 := `2GB. See whether documents have been`
			_, err = templBuffer.WriteString(var_13)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(" ")
			if err != nil {
				return err
			}
			var_14 := `downloaded already.`
			_, err = templBuffer.WriteString(var_14)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</p></div></div></div></div><div class=\"row\"><div class=\"col-lg-6 mb-6\"><div class=\"card h-100\"><div class=\"card-body\"><div class=\"bc-avatar-and-text mb-6\"><div class=\"bc-avatar bc-avatar--medium bc-avatar--rounded bc-avatar--light-blue\"><i class=\"if if-edit\"></i></div><div class=\"bc-avatar-text\"><h3>")
			if err != nil {
				return err
			}
			var_15 := `Manage folder content &amp; acces`
			_, err = templBuffer.WriteString(var_15)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</h3></div></div><p class=\"text-muted\">")
			if err != nil {
				return err
			}
			var_16 := `Swap out documents and adapt`
			_, err = templBuffer.WriteString(var_16)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(" ")
			if err != nil {
				return err
			}
			var_17 := `expiration dates for folders whenever you`
			_, err = templBuffer.WriteString(var_17)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(" ")
			if err != nil {
				return err
			}
			var_18 := `need to.`
			_, err = templBuffer.WriteString(var_18)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</p></div></div></div></div></div></div>")
			if err != nil {
				return err
			}
			if !templIsBuffer {
				_, err = io.Copy(w, templBuffer)
			}
			return err
		})
		err = pageLayout(c, "Deliver").Render(templ.WithChildren(ctx, var_2), templBuffer)
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
