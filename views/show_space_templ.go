// Code generated by templ@v0.2.334 DO NOT EDIT.

package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"fmt"
	"github.com/ugent-library/deliver/ctx"
	"github.com/ugent-library/deliver/models"
	"github.com/ugent-library/deliver/validate"
	"github.com/ugent-library/friendly"
	"time"
)

func ShowSpace(c *ctx.Ctx, space *models.Space, userSpaces []*models.Space, folder *models.Folder, errs *validate.Errors) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		err = pageLayout(c, space.Name, showSpaceContent(c, space, userSpaces, folder, errs)).Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}

func showSpaceContent(c *ctx.Ctx, space *models.Space, userSpaces []*models.Space, folder *models.Folder, errs *validate.Errors) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_2 := templ.GetChildren(ctx)
		if var_2 == nil {
			var_2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<div class=\"c-sub-sidebar c-sidebar--bordered\" hx-ext=\"ws\" ws-connect=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(c.WebSocketPath("space." + space.ID)))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"><div class=\"bc-navbar bc-navbar--xlarge bc-navbar--bordered-bottom\"><div class=\"bc-toolbar\"><div class=\"bc-toolbar-left\"><div class=\"bc-toolbar-item\"><h1 class=\"bc-toolbar-title\">")
		if err != nil {
			return err
		}
		var_3 := `Your deliver spaces`
		_, err = templBuffer.WriteString(var_3)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h1></div></div></div></div><div class=\"c-sub-sidebar__menu my-6\"><nav><ul class=\"c-sub-sidebar-menu\">")
		if err != nil {
			return err
		}
		for _, s := range userSpaces {
			var var_4 = []any{"c-sub-sidebar__item", templ.KV("c-sub-sidebar__item--active", s.ID == space.ID)}
			err = templ.RenderCSSItems(ctx, templBuffer, var_4...)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("<li class=\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(templ.EscapeString(templ.CSSClasses(var_4).String()))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\"><a href=\"")
			if err != nil {
				return err
			}
			var var_5 templ.SafeURL = templ.URL(c.PathTo("space", "spaceName", s.Name).String())
			_, err = templBuffer.WriteString(templ.EscapeString(string(var_5)))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\"><span class=\"c-sidebar__label\">")
			if err != nil {
				return err
			}
			var var_6 string = s.Name
			_, err = templBuffer.WriteString(templ.EscapeString(var_6))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</span></a></li>")
			if err != nil {
				return err
			}
		}
		if c.Permissions.IsAdmin(c.User) {
			_, err = templBuffer.WriteString("<li class=\"c-sub-sidebar__item\"><a href=\"")
			if err != nil {
				return err
			}
			var var_7 templ.SafeURL = templ.URL(c.PathTo("newSpace").String())
			_, err = templBuffer.WriteString(templ.EscapeString(string(var_7)))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\"><span class=\"c-sidebar__label\"><i class=\"if if-add\"></i> ")
			if err != nil {
				return err
			}
			var_8 := `Make a new space`
			_, err = templBuffer.WriteString(var_8)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</span></a></li>")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("</ul></nav></div></div><div class=\"w-100 u-scroll-wrapper\"><div class=\"bg-white\"><div class=\"bc-navbar bc-navbar--xlarge bc-navbar--white bc-navbar--bordered-bottom\"><div class=\"bc-toolbar\"><div class=\"bc-toolbar-left\"><div class=\"bc-toolbar-item\"><h1 class=\"bc-toolbar-title\">")
		if err != nil {
			return err
		}
		var var_9 string = space.Name
		_, err = templBuffer.WriteString(templ.EscapeString(var_9))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" ")
		if err != nil {
			return err
		}
		var_10 := `folders`
		_, err = templBuffer.WriteString(var_10)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h1></div></div>")
		if err != nil {
			return err
		}
		if c.Permissions.IsAdmin(c.User) {
			_, err = templBuffer.WriteString("<div class=\"bc-toolbar-right\"><div class=\"bc-toolbar-item\"><a class=\"btn btn-link btn-link-muted\" href=\"")
			if err != nil {
				return err
			}
			var var_11 templ.SafeURL = templ.URL(c.PathTo("editSpace", "spaceName", space.Name).String())
			_, err = templBuffer.WriteString(templ.EscapeString(string(var_11)))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\"><i class=\"if if-edit\"></i><span class=\"btn-text\">")
			if err != nil {
				return err
			}
			var_12 := `Edit space`
			_, err = templBuffer.WriteString(var_12)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</span></a></div></div>")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("</div></div></div><div class=\"u-scroll-wrapper__body p-6\"><div class=\"card w-100 mb-6\"><div class=\"card-header\"><div class=\"bc-toolbar\"><div class=\"bc-toolbar-left\"><div class=\"bc-toolbar-item\"><h2>")
		if err != nil {
			return err
		}
		var_13 := `Make a folder`
		_, err = templBuffer.WriteString(var_13)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h2></div></div></div></div><div class=\"card-body\"><form action=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(c.PathTo("createFolder", "spaceName", space.Name).String()))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\" method=\"POST\">")
		if err != nil {
			return err
		}
		err = rawHTML(c.CSRFTag).Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		var var_14 = []any{"mb-6", templ.KV("is-invalid", errs.Get("name") != nil)}
		err = templ.RenderCSSItems(ctx, templBuffer, var_14...)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("<div class=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(templ.CSSClasses(var_14).String()))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"><label class=\"c-label\" for=\"folder-name\">")
		if err != nil {
			return err
		}
		var_15 := `Folder name`
		_, err = templBuffer.WriteString(var_15)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</label><div class=\"row\"><div class=\"col-md-6\">")
		if err != nil {
			return err
		}
		if e := errs.Get("name"); e != nil {
			_, err = templBuffer.WriteString("<input class=\"form-control is-invalid\" type=\"text\" value=\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(templ.EscapeString(folder.Name))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\" id=\"folder-name\" name=\"name\" aria-invalid=\"true\" aria-describedby=\"folder-name-invalid\"> <small class=\"invalid-feedback\" id=\"folder-name-invalid\">")
			if err != nil {
				return err
			}
			var var_16 string = e.Error()
			_, err = templBuffer.WriteString(templ.EscapeString(var_16))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</small>")
			if err != nil {
				return err
			}
		} else {
			_, err = templBuffer.WriteString("<input class=\"form-control\" type=\"text\" value=\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(templ.EscapeString(folder.Name))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\" id=\"folder-name\" name=\"name\">")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("<small class=\"form-text text-muted\">")
		if err != nil {
			return err
		}
		var_17 := `We will generate a shareable public link for you.`
		_, err = templBuffer.WriteString(var_17)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" <br> ")
		if err != nil {
			return err
		}
		var_18 := `Each folder will expire one month after creation date.`
		_, err = templBuffer.WriteString(var_18)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</small></div><div class=\"col-md-3\"><button class=\"btn btn-primary ms-4\" type=\"submit\"><i class=\"if if-check\"></i><span class=\"btn-text\">")
		if err != nil {
			return err
		}
		var_19 := `Make folder`
		_, err = templBuffer.WriteString(var_19)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</span></button></div></div></div></form></div></div><div class=\"card w-100 mb-6\"><div class=\"card-header\"><div class=\"bc-toolbar\"><div class=\"bc-toolbar-left\"><div class=\"bc-toolbar-item\"><h2>")
		if err != nil {
			return err
		}
		var_20 := `Folders`
		_, err = templBuffer.WriteString(var_20)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h2></div></div><div class=\"bc-toolbar-right\"><div class=\"bc-toolbar-item\"><p>")
		if err != nil {
			return err
		}
		var_21 := `Showing `
		_, err = templBuffer.WriteString(var_21)
		if err != nil {
			return err
		}
		var var_22 string = fmt.Sprint(len(space.Folders))
		_, err = templBuffer.WriteString(templ.EscapeString(var_22))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" ")
		if err != nil {
			return err
		}
		var_23 := `of `
		_, err = templBuffer.WriteString(var_23)
		if err != nil {
			return err
		}
		var var_24 string = fmt.Sprint(len(space.Folders))
		_, err = templBuffer.WriteString(templ.EscapeString(var_24))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" ")
		if err != nil {
			return err
		}
		var_25 := `folders`
		_, err = templBuffer.WriteString(var_25)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</p></div></div></div></div>")
		if err != nil {
			return err
		}
		if len(space.Folders) > 0 {
			_, err = templBuffer.WriteString("<div class=\"table-responsive\"><table class=\"table table-sm table-bordered\"><thead><tr><th class=\"table-col-lg-fixed table-col-sm-fixed-left text-nowrap\">")
			if err != nil {
				return err
			}
			var_26 := `Folder`
			_, err = templBuffer.WriteString(var_26)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th class=\"text-nowrap\">")
			if err != nil {
				return err
			}
			var_27 := `Public shareable link`
			_, err = templBuffer.WriteString(var_27)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th class=\"text-nowrap\">")
			if err != nil {
				return err
			}
			var_28 := `Expires on`
			_, err = templBuffer.WriteString(var_28)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th class=\"text-nowrap\">")
			if err != nil {
				return err
			}
			var_29 := `Documents`
			_, err = templBuffer.WriteString(var_29)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th class=\"text-nowrap\">")
			if err != nil {
				return err
			}
			var_30 := `Created at`
			_, err = templBuffer.WriteString(var_30)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th class=\"text-nowrap\">")
			if err != nil {
				return err
			}
			var_31 := `Updated at`
			_, err = templBuffer.WriteString(var_31)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th class=\"table-col-sm-fixed table-col-sm-fixed-right\"></th></tr></thead><tbody>")
			if err != nil {
				return err
			}
			for _, f := range space.Folders {
				_, err = templBuffer.WriteString("<tr><td class=\"text-nowrap table-col-lg-fixed table-col-sm-fixed-left\"><a href=\"")
				if err != nil {
					return err
				}
				var var_32 templ.SafeURL = templ.URL(c.PathTo("folder", "folderID", f.ID).String())
				_, err = templBuffer.WriteString(templ.EscapeString(string(var_32)))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\">")
				if err != nil {
					return err
				}
				var var_33 string = f.Name
				_, err = templBuffer.WriteString(templ.EscapeString(var_33))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</a></td><td class=\"text-nowrap\"><div class=\"input-group\" style=\"min-width: 375px;\"><button type=\"button\" class=\"btn btn-outline-secondary\" data-clipboard=\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(templ.EscapeString(c.URLTo("shareFolder", "folderID", f.ID, "folderSlug", f.Slug()).String()))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\"><i class=\"if if-copy text-primary\"></i><span class=\"btn-text\">")
				if err != nil {
					return err
				}
				var_34 := `Copy link`
				_, err = templBuffer.WriteString(var_34)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span></button><input type=\"text\" class=\"form-control input-select-text\" style=\"min-width: 250px;\" readonly data-select-value value=\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(templ.EscapeString(c.URLTo("shareFolder", "folderID", f.ID, "folderSlug", f.Slug()).String()))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\"></div></td><td class=\"text-nowrap\"><p>")
				if err != nil {
					return err
				}
				var var_35 string = f.ExpiresAt.In(c.Timezone).Format("2006-01-02 15:04")
				_, err = templBuffer.WriteString(templ.EscapeString(var_35))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</p>")
				if err != nil {
					return err
				}
				if time.Until(f.ExpiresAt) < time.Hour*24*7 {
					_, err = templBuffer.WriteString("<p class=\"badge rounded-pill badge-default mt-2\"><i class=\"if if-info-circle\"></i><span class=\"badge-text\">")
					if err != nil {
						return err
					}
					var_36 := `Expires in `
					_, err = templBuffer.WriteString(var_36)
					if err != nil {
						return err
					}
					var var_37 string = friendly.TimeRemaining(time.Until(f.ExpiresAt), friendly.EnglishTimeUnits)
					_, err = templBuffer.WriteString(templ.EscapeString(var_37))
					if err != nil {
						return err
					}
					var_38 := `.`
					_, err = templBuffer.WriteString(var_38)
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString("</span></p>")
					if err != nil {
						return err
					}
				}
				_, err = templBuffer.WriteString("</td><td class=\"text-nowrap\"><p>")
				if err != nil {
					return err
				}
				var var_39 string = fmt.Sprint(len(f.Files))
				_, err = templBuffer.WriteString(templ.EscapeString(var_39))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" ")
				if err != nil {
					return err
				}
				var_40 := `files`
				_, err = templBuffer.WriteString(var_40)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</p><ul class=\"c-meta-list c-meta-list-horizontal\"><li class=\"c-meta-item\"><span>")
				if err != nil {
					return err
				}
				var var_41 string = friendly.Bytes(f.TotalSize())
				_, err = templBuffer.WriteString(templ.EscapeString(var_41))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span></li><li class=\"c-meta-item\"><span>")
				if err != nil {
					return err
				}
				var var_42 string = fmt.Sprint(f.TotalDownloads())
				_, err = templBuffer.WriteString(templ.EscapeString(var_42))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" ")
				if err != nil {
					return err
				}
				var_43 := `downloads`
				_, err = templBuffer.WriteString(var_43)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span></li></ul></td><td class=\"text-nowrap\"><p>")
				if err != nil {
					return err
				}
				var var_44 string = f.CreatedAt.In(c.Timezone).Format("2006-01-02 15:04")
				_, err = templBuffer.WriteString(templ.EscapeString(var_44))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</p></td><td class=\"text-nowrap\"><p>")
				if err != nil {
					return err
				}
				var var_45 string = f.UpdatedAt.In(c.Timezone).Format("2006-01-02 15:04")
				_, err = templBuffer.WriteString(templ.EscapeString(var_45))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</p></td><td class=\"table-col-sm-fixed table-col-sm-fixed-right\"><div class=\"c-button-toolbar\"><a class=\"btn btn-link\" href=\"")
				if err != nil {
					return err
				}
				var var_46 templ.SafeURL = templ.URL(c.PathTo("folder", "folderID", f.ID).String())
				_, err = templBuffer.WriteString(templ.EscapeString(string(var_46)))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\"><i class=\"if if-draft\"></i><span class=\"btn-text\">")
				if err != nil {
					return err
				}
				var_47 := `Open`
				_, err = templBuffer.WriteString(var_47)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span></a></div></td></tr>")
				if err != nil {
					return err
				}
			}
			_, err = templBuffer.WriteString("</tbody></table></div>")
			if err != nil {
				return err
			}
		} else {
			_, err = templBuffer.WriteString("<div class=\"c-blank-slate c-blank-slate-muted\"><div class=\"bc-avatar\"><i class=\"if if-info-circle\"></i></div><p>")
			if err != nil {
				return err
			}
			var_48 := `Make a folder to get started`
			_, err = templBuffer.WriteString(var_48)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</p></div>")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("</div></div></div>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
