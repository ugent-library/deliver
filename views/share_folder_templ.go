// Code generated by templ@v0.2.334 DO NOT EDIT.

package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"fmt"
	"github.com/ugent-library/deliver/ctx"
	"github.com/ugent-library/deliver/models"
	"github.com/ugent-library/friendly"
)

func ShareFolder(c *ctx.Ctx, folder *models.Folder) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		err = publicPageLayout(c, folder.Name, shareFolderContent(c, folder)).Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}

func shareFolderContent(c *ctx.Ctx, folder *models.Folder) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_2 := templ.GetChildren(ctx)
		if var_2 == nil {
			var_2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<div class=\"d-flex u-maximize-height\"><div class=\"w-100 u-scroll-wrapper\"><div class=\"bg-white\"><div class=\"bc-navbar bc-navbar--xlarge bc-navbar--white bc-navbar--bordered-bottom\"><div class=\"w-100\"><div class=\"bc-toolbar bc-toolbar--auto\"><div class=\"bc-toolbar-left\"><div class=\"bc-toolbar-item\"><h4 class=\"bc-toolbar-title\">")
		if err != nil {
			return err
		}
		var_3 := `Library delivery from `
		_, err = templBuffer.WriteString(var_3)
		if err != nil {
			return err
		}
		var var_4 string = folder.Space.Name
		_, err = templBuffer.WriteString(templ.EscapeString(var_4))
		if err != nil {
			return err
		}
		var_5 := `: `
		_, err = templBuffer.WriteString(var_5)
		if err != nil {
			return err
		}
		var var_6 string = folder.Name
		_, err = templBuffer.WriteString(templ.EscapeString(var_6))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h4></div><div class=\"bc-toolbar-item\"><p>")
		if err != nil {
			return err
		}
		var_7 := `Expires on `
		_, err = templBuffer.WriteString(var_7)
		if err != nil {
			return err
		}
		var var_8 string = folder.ExpiresAt.In(c.Timezone).Format("2006-01-02 15:04")
		_, err = templBuffer.WriteString(templ.EscapeString(var_8))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</p></div></div></div><div class=\"bc-toolbar bc-toolbar--auto mt-2\"><div class=\"bc-toolbar-left\"><div class=\"bc-toolbar-item\"><p class=\"text-muted\">")
		if err != nil {
			return err
		}
		var_9 := `Public shareable link: `
		_, err = templBuffer.WriteString(var_9)
		if err != nil {
			return err
		}
		var var_10 string = c.URLTo("shareFolder", "folderID", folder.ID, "folderSlug", folder.Slug()).String()
		_, err = templBuffer.WriteString(templ.EscapeString(var_10))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</p></div></div></div></div></div></div><div class=\"u-scroll-wrapper__body p-6\"><div class=\"card w-100 mb-6\"><div class=\"card-header\"><div class=\"bc-toolbar\"><div class=\"bc-toolbar-left\"><div class=\"bc-toolbar-item\"><h5>")
		if err != nil {
			return err
		}
		var_11 := `Download your files before `
		_, err = templBuffer.WriteString(var_11)
		if err != nil {
			return err
		}
		var var_12 string = folder.ExpiresAt.In(c.Timezone).Format("2006-01-02 15:04")
		_, err = templBuffer.WriteString(templ.EscapeString(var_12))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h5></div></div><div class=\"bc-toolbar-right\"><div class=\"bc-toolbar-item\"><p>")
		if err != nil {
			return err
		}
		var var_13 string = fmt.Sprint(len(folder.Files))
		_, err = templBuffer.WriteString(templ.EscapeString(var_13))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" ")
		if err != nil {
			return err
		}
		var_14 := `items (`
		_, err = templBuffer.WriteString(var_14)
		if err != nil {
			return err
		}
		var var_15 string = friendly.Bytes(folder.TotalSize())
		_, err = templBuffer.WriteString(templ.EscapeString(var_15))
		if err != nil {
			return err
		}
		var_16 := `)`
		_, err = templBuffer.WriteString(var_16)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</p></div></div></div></div>")
		if err != nil {
			return err
		}
		if len(folder.Files) > 0 {
			_, err = templBuffer.WriteString("<div class=\"table-responsive\"><table class=\"table table-sm table-bordered\"><thead><tr><th class=\"table-col-lg-fixed table-col-sm-fixed-left text-nowrap align-middle\">")
			if err != nil {
				return err
			}
			var_17 := `File name`
			_, err = templBuffer.WriteString(var_17)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th class=\"text-nowrap align-middle\">")
			if err != nil {
				return err
			}
			var_18 := `Size`
			_, err = templBuffer.WriteString(var_18)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th class=\"text-nowrap align-middle\">")
			if err != nil {
				return err
			}
			var_19 := `Type`
			_, err = templBuffer.WriteString(var_19)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th class=\"text-nowrap align-middle\">")
			if err != nil {
				return err
			}
			var_20 := `Downloads`
			_, err = templBuffer.WriteString(var_20)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th class=\"text-nowrap align-middle\">")
			if err != nil {
				return err
			}
			var_21 := `Created at`
			_, err = templBuffer.WriteString(var_21)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th class=\"table-col-sm-fixed table-col-sm-fixed-right text-end align-middle\"><a class=\"btn btn-primary\" href=\"")
			if err != nil {
				return err
			}
			var var_22 templ.SafeURL = templ.URL(c.PathTo("downloadFolder", "folderID", folder.ID).String())
			_, err = templBuffer.WriteString(templ.EscapeString(string(var_22)))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\"><i class=\"if if-download\"></i><span class=\"btn-text\">")
			if err != nil {
				return err
			}
			var_23 := `Download all files`
			_, err = templBuffer.WriteString(var_23)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</span></a></th></tr></thead><tbody>")
			if err != nil {
				return err
			}
			for _, f := range folder.Files {
				_, err = templBuffer.WriteString("<tr class=\"clickable-table-row\"><td class=\"text-nowrap table-col-lg-fixed table-col-sm-fixed-left\"><a href=\"")
				if err != nil {
					return err
				}
				var var_24 templ.SafeURL = templ.URL(c.PathTo("downloadFile", "fileID", f.ID).String())
				_, err = templBuffer.WriteString(templ.EscapeString(string(var_24)))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\"><span>")
				if err != nil {
					return err
				}
				var var_25 string = f.Name
				_, err = templBuffer.WriteString(templ.EscapeString(var_25))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span></a><br><small class=\"text-muted\">")
				if err != nil {
					return err
				}
				var_26 := `md5 checksum: `
				_, err = templBuffer.WriteString(var_26)
				if err != nil {
					return err
				}
				var var_27 string = f.MD5
				_, err = templBuffer.WriteString(templ.EscapeString(var_27))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</small></td><td class=\"text-nowrap\"><p>")
				if err != nil {
					return err
				}
				var var_28 string = friendly.Bytes(f.Size)
				_, err = templBuffer.WriteString(templ.EscapeString(var_28))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</p></td><td class=\"text-nowrap\"><p>")
				if err != nil {
					return err
				}
				var var_29 string = f.ContentType
				_, err = templBuffer.WriteString(templ.EscapeString(var_29))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</p></td><td class=\"text-nowrap\"><p>")
				if err != nil {
					return err
				}
				var var_30 string = fmt.Sprint(f.Downloads)
				_, err = templBuffer.WriteString(templ.EscapeString(var_30))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</p></td><td class=\"text-nowrap\"><p>")
				if err != nil {
					return err
				}
				var var_31 string = f.CreatedAt.In(c.Timezone).Format("2006-01-02 15:04")
				_, err = templBuffer.WriteString(templ.EscapeString(var_31))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</p></td><td class=\"table-col-sm-fixed table-col-sm-fixed-right\"><div class=\"c-button-toolbar\"><a class=\"btn btn-link\" href=\"")
				if err != nil {
					return err
				}
				var var_32 templ.SafeURL = templ.URL(c.PathTo("downloadFile", "fileID", f.ID).String())
				_, err = templBuffer.WriteString(templ.EscapeString(string(var_32)))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\"><i class=\"if if-download\"></i><span class=\"btn-txt\">")
				if err != nil {
					return err
				}
				var_33 := `Download`
				_, err = templBuffer.WriteString(var_33)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span></a></div></td></tr>")
				if err != nil {
					return err
				}
			}
			_, err = templBuffer.WriteString("</tbody></table></div>")
			if err != nil {
				return err
			}
		} else {
			_, err = templBuffer.WriteString("<div class=\"c-blank-slate c-blank-slate-muted\"><div class=\"bc-avatar\"><i class=\"if if-info-circle\"></i></div><p>")
			if err != nil {
				return err
			}
			var_34 := `No files to display.`
			_, err = templBuffer.WriteString(var_34)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(" <br> ")
			if err != nil {
				return err
			}
			var_35 := `Please get in touch with the person that sent you this link.`
			_, err = templBuffer.WriteString(var_35)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</p></div>")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("</div></div></div></div>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
